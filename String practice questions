# -----------------------------
# ðŸ”¹ Level 1: Basic Operations
# -----------------------------

# 1. Length Calculation
brand = "Lenovo"
length = len(brand)
print("1. Length of 'Lenovo':", length)

# 2. Concatenation
brand1 = "Dell"
brand2 = "HP"
combined = brand1 + brand2
print("2. Concatenation of 'Dell' and 'HP':", combined)

# 3. Character Access
astring = "Asus"
second_char = astring[1]  # index starts at 0
print("3. 2nd character of 'Asus':", second_char)

# 4. Traversal
print("4. Characters in 'Apple':")
for ch in "Apple":
    print(ch)

# 5. Uppercase Conversion
acer = "acer"
print("5. Uppercase of 'acer':", acer.upper())


# -----------------------------
# ðŸ”¹ Level 2: Intermediate Operations
# -----------------------------

# 6. Reverse a Brand Name
msi = "MSI"
reversed_msi = msi[::-1]
print("6. Reversed 'MSI':", reversed_msi)

# 7. Search for a Substring
sentence = "Popular brands are Dell, HP, and Lenovo"
found_dell = "Dell" in sentence
print("7. Is 'Dell' in sentence?:", "Yes" if found_dell else "No")

# 8. Count Occurrence
brands_str = "HP, HP, Lenovo, Dell"
hp_count = brands_str.count("HP")
print("8. Count of 'HP':", hp_count)

# 9. Sorting Brand Names
brands_list = ["Lenovo", "Dell", "HP", "Asus"]
brands_list_sorted = sorted(brands_list)
print("9. Sorted brand names:", brands_list_sorted)

# 10. Replace a Brand Name
sentence2 = "Apple is a premium brand"
replaced_sentence = sentence2.replace("Apple", "MSI")
print("10. After replacing 'Apple' with 'MSI':", replaced_sentence)


# -----------------------------
# ðŸ”¹ Level 3: Advanced Operations
# -----------------------------

# 11. Palindrome Check
brand_palindrome = "MSI"
is_palindrome = brand_palindrome == brand_palindrome[::-1]
print("11. Is 'MSI' a palindrome?:", "Yes" if is_palindrome else "No")

# 12. Unique Characters
brand_uniques = "Lenovo"
unique_chars = set(brand_uniques)
print("12. Unique characters in 'Lenovo':", unique_chars)

# 13. Longest Brand Name
brand_list2 = ["Dell", "HP", "Lenovo", "Asus", "Apple", "MSI"]
longest_brand = max(brand_list2, key=len)
print("13. Longest brand name:", longest_brand)

# 14. String Matching (Prefix)
brands_with_a = [brand for brand in ["Dell", "HP", "Lenovo", "Asus"] if brand.startswith("A")]
print("14. Brands starting with 'A':", brands_with_a)

# 15. Frequency Map
from collections import Counter
apple_freq = Counter("Apple")
print("15. Character frequency in 'Apple':", dict(apple_freq))
